CREATE TABLE cosmetic (
    no               NUMBER(5) NOT NULL,
    name             VARCHAR2(100) NOT NULL,
    volume           VARCHAR2(20) NOT NULL,
    effect           VARCHAR2(200) NOT NULL,
    how_to_use       VARCHAR2(200) NOT NULL,
    expiration_date  VARCHAR2(200) NOT NULL,
    brand_name       VARCHAR2(50) NOT NULL
);

ALTER TABLE cosmetic ADD CONSTRAINT cosmetic_pk PRIMARY KEY ( no );

CREATE TABLE login_info (
    member_id   VARCHAR2(30) NOT NULL,
    login_date  VARCHAR2(50) NOT NULL,
    point       NUMBER(10) NOT NULL
);

ALTER TABLE login_info ADD CONSTRAINT login_info_pk PRIMARY KEY ( member_id );

CREATE TABLE member (
    id           VARCHAR2(30) NOT NULL,
    password     VARCHAR2(500) NOT NULL,
    email        VARCHAR2(100) NOT NULL,
    phonenumber  VARCHAR2(30) NOT NULL
);

ALTER TABLE member ADD CONSTRAINT member_pk PRIMARY KEY ( id );

CREATE TABLE member_cosmetic (
    member_id      VARCHAR2(30) NOT NULL,
    cosmetic_no    NUMBER(5) NOT NULL,
    pruchase_date  VARCHAR2(50) NOT NULL
);

ALTER TABLE member_cosmetic ADD CONSTRAINT member_cosmetic_pk PRIMARY KEY ( member_id,
                                                                            cosmetic_no );

ALTER TABLE login_info
    ADD CONSTRAINT login_info_member_fk FOREIGN KEY ( member_id )
        REFERENCES member ( id );

ALTER TABLE member_cosmetic
    ADD CONSTRAINT member_cosmetic_cosmetic_fk FOREIGN KEY ( cosmetic_no )
        REFERENCES cosmetic ( no );

ALTER TABLE member_cosmetic
    ADD CONSTRAINT member_cosmetic_member_fk FOREIGN KEY ( member_id )
        REFERENCES member ( id );

create sequence cosmetics_no_seq
increment by 1
start with 1
minvalue 1
maxvalue 1000
nocycle
nocache;

insert into cosmetic
(no, name, volume, effect, how_to_use, expiration_date, brand_name)
values(cosmetics_no_seq.NEXTVAL, '마데카소사이드 앰플', '50ml', '피부 진정케어',
'기초 스킨케어 시 함께 사용', '제조일로부터 18개월', '어퓨');
insert into cosmetic
(no, name, volume, effect, how_to_use, expiration_date, brand_name)
values(cosmetics_no_seq.NEXTVAL, '원데이즈유 시카밍 크림', '50ml', '피부 보습 및 진정',
'아침, 저녁 세안 후 스킨케어의 마지막 단계에서 발라줍니다.', '제조일로부터 36개월', '원데이즈유');
insert into cosmetic
(no, name, volume, effect, how_to_use, expiration_date, brand_name)
values(cosmetics_no_seq.NEXTVAL, '원데이즈유 시카밍 앰플 세럼', '20ml', '피부 보습 및 진정',
'토너 사용후 사용합니다. 피부에 골고루 펴 바른 후 두드려 흡수시켜 주세요.','제조일로부터 36개월', '원데이즈유');
insert into cosmetic
(no, name, volume, effect, how_to_use, expiration_date, brand_name)
values(cosmetics_no_seq.NEXTVAL, '시카딘 레스큐 워터 선스틱', '20ml', '피부 자외선 차단',
'스킨케어 마지막 단계에서 발라줍니다. 피부에 골고루 펴 바른 후 두드려 흡수시켜 주세요.','제조일로부터 24개월', '미샤');
insert into cosmetic
(no, name, volume, effect, how_to_use, expiration_date, brand_name)
values(cosmetics_no_seq.NEXTVAL, '아크네스 모이스처크림', '60ml', '피부 보습 및 진정',
'스킨케어의 마지막 단계에 적당량을 덜어 피부에 흡수시켜줍니다. 피부가 건조할 시 얇게 여러 번 덧발라주면 집중 보습케어가 가능합니다.', '제조일로부터 24개월','아크네스');
insert into cosmetic
(no, name, volume, effect, how_to_use, expiration_date, brand_name)
values(cosmetics_no_seq.NEXTVAL, '마데카소사이드 수분 젤 크림','50ml', '피부 보습 및 진정',
'토너 사용후 사용합니다. 피부에 골고루 펴 바른 후 두드려 흡수시켜 주세요.', '제조일로부터 18개월','어퓨');
insert into cosmetic
(no, name, volume, effect, how_to_use, expiration_date, brand_name)
values(cosmetics_no_seq.NEXTVAL, '산뽕나무 토너', '210ml', '피부 각질 정돈 및 진정',
'세안 후 적당량을 화장솜에 적셔 피부결을 따라 부드럽게 닦아주고, 손바닥으로 가볍게 두드려 흡수시켜 줍니다.', '제조일로부터 18개월','어퓨');
insert into cosmetic
(no, name, volume, effect, how_to_use, expiration_date, brand_name)
values(cosmetics_no_seq.NEXTVAL, '쥬시플래닝 릴리프 약산성 클렌징 워터','200ml', '피부 클렌징',
'화장솜에 적당량을 덜어 충분히 적신 후, 피부결을 따라 안에서 바깥 방향으로 부드럽게 닦아줍니다.','제조일로부터 18개월', '어퓨');

drop package member_pkg;
create or replace package member_pkg
is
    procedure insert_member(input_id in varchar2,
        input_password in varchar2,
        input_email in varchar2,
        input_phoneNumber in varchar2);
        
    procedure select_memberById(input_id in varchar2,
    res_cur out sys_refcursor);
    
    procedure select_memberByEmail(input_email in varchar2,
    res_cur out sys_refcursor);
    
    procedure select_memberByPhone(input_phone in varchar2,
    res_cur out sys_refcursor);
    
    procedure login_member(input_id in varchar2,
    input_pw in varchar2,
    res_cur out sys_refcursor);
    
    procedure update_member(input_id in varchar2,
    input_password in varchar2,
    input_email in varchar2,
    input_phoneNumber in varchar2,
    res out number);
    
    procedure update_password(input_id in varchar2,
    prev_password in varchar2,
    new_password in varchar2,
    res out number);
    
    procedure delete_member(input_id in varchar2,
    input_password in varchar2,
    res out number);
    
    procedure find_id(input_email in varchar2,
    res out number);
    
    procedure find_pw(input_id in varchar2,
    res out number);
end member_pkg;

create or replace package body member_pkg
is
    procedure insert_member(input_id in varchar2,
        input_password in varchar2,
        input_email in varchar2,
        input_phoneNumber in varchar2)
    as
    begin  
        insert into member(id, password, email, phoneNumber)
        values(input_id, input_password, input_email,
        input_phoneNumber);
        commit;
    end insert_member;
    
    procedure select_memberById(input_id in varchar2,
    res_cur out sys_refcursor)
    as
    begin
        open res_cur for
        select * from member
        where id = input_id;
    end select_memberById;
    
    procedure select_memberByEmail(input_email in varchar2,
    res_cur out sys_refcursor)
    as
    begin
        open res_cur for
        select * from member
        where email = input_email;
    end select_memberByEmail;
    
    procedure select_memberByPhone(input_phone in varchar2,
    res_cur out sys_refcursor)
    as
    begin
        open res_cur for
        select * from member
        where phonenumber = input_phone;
    end select_memberByPhone;
    
    procedure login_member(input_id in varchar2,
    input_pw in varchar2,
    res_cur out sys_refcursor)
    as
    begin
        open res_cur for
        select * from member
        where id = input_id and password = input_pw;
    end login_member;
    
    procedure update_member(input_id in varchar2,
    input_password in varchar2,
    input_email in varchar2,
    input_phoneNumber in varchar2,
    res out number)
    as
        cnt number(5);
    begin
        select count(*) into cnt
        from member
        where id = input_id
        and password = input_password;
        
        if cnt > 0  then
            res := 1;
            update member
            set email = input_email,
            phoneNumber = input_phoneNumber
            where id = input_id and password = input_password;
            commit;
        else
            res := 0;
        end if;
    end update_member;  
    
    procedure update_password(input_id in varchar2,
    prev_password in varchar2,
    new_password in varchar2,
    res out number)
    as
    prev_pwd varchar2(200);
    begin
        select password into prev_pwd
        from member
        where id = input_id;
        
        if prev_password = prev_pwd then
            update member
            set password = new_password
            where id = input_id;
            res := 1;
            commit;
        else
            res := 0;
        end if;
    end update_password;
    
    procedure delete_member(input_id in varchar2,
    input_password in varchar2,
    res out number)
    as
        cnt number(5);
    begin
        select count(*) into cnt
        from member
        where id = input_id and
        password = input_password;
        
        if cnt > 0 then
            delete from member
            where id = input_id;
            commit;
            res := 1;
        else
            res := 0;
        end if;
    end delete_member;
    
    procedure find_id(input_email in varchar2,
    res out number)
    as
    begin
        select count(*) into res
        from member
        where email = input_email;
    end find_id;
    
    procedure find_pw(input_id in varchar2,
    res out number)
    as
    begin
        select count(*) into res
        from member
        where id = input_id;
    end find_pw;
end member_pkg;


drop table cosmetic cascade constraints purge;
drop table member cascade constraints purge;
drop table member_cosmetic cascade constraints purge;
drop table login_info cascade constraints purge;

drop sequence cosmetics_no_seq;

select * from member;

